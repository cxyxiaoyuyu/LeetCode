// 给定范围 [m, n]，其中 0 <= m <= n <= 2147483647，
// 返回此范围内所有数字的按位与（包含 m, n 两端点）。

// 示例 1: 

// 输入: [5,7]
// 输出: 4
// 示例 2:

// 输入: [0,1]
// 输出: 0

// 1 先右移找到公共前缀 再将公共前缀左移回来
const rangeBitwiseAnd = (m,n)=>{
    if(m===0 || n===0) return 0
    let pos = 0
    while(m<n){
        m >>= 1
        n >>= 1
        pos++
    }
    return m << pos
}